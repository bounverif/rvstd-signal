name: CMake

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'include/rvstd/**'
      - 'benchmarks/**'
      - 'tests/**'
  push:
    branches: 
      - main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-test:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Pull catch2 library-1
      #it pulls library catch2
      run: git clone --depth 1 --branch v3.1.0 https://github.com/catchorg/Catch2.git /tmp/catch2
      
    - name: Pull catch2 library-2  
      #it pulls builds catch2
      run: cmake -S/tmp/catch2 -B/tmp/catch2/build -DBUILD_TESTING=OFF -DCATCH_INSTALL_DOCS=OFF 
      
    - name: Pull catch2 library-3  
      #it pulls builds catch2
      run: sudo cmake --build /tmp/catch2/build/ --target install -j$(nproc) 
      
    - name: Pull catch2 library-4
      #catch2 library
      run: rm -rf /tmp/catch2
      
    - name: Configure CMake
      working-directory: ${{github.workspace}}/tests
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/tests/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/tests/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/tests/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
